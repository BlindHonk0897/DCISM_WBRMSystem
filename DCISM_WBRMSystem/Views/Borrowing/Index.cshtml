@model DCISM_WBRMSystem.Models.CustomModels.RouterModel
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@Html.Partial(Model._Partial)

@if (Model._Partial == "_UserPage")
{
    @section scripts{

        <script>
            $(document).ready(function () {
                var Username = $('#Username').val();
                var IDNumber = $('#IDNumber').val();
                $.getJSON("/api/Common/GetOpenRequest/idnumber/" + IDNumber + "/username/" + Username).done(function (data) {
                    $('#request-recent').empty();
                    $('#display-total').html('<code>Total:</code>' + data.length + ' items');
                    if (data.length > 0) {
                        for (var i = 0; i < data.length; i++) {
                            $('#request-recent').append('<tr><td>' + data[i].Id_Request + '</td><td>' + data[i].formatted_transac_date + '</td><td>' + data[i].Purpose + '</td><td><a href="#" onclick="showCartItems(this)" data-cartid ="' + data[i].Id_Cart + '" >View-Cart</a></td><td>' + data[i].Status + '</td><td><a href="#" onclick="CancelRequest(this)" data-requestid="' + data[i].Id_Request + '"data-cartid ="' + data[i].Id_Cart + '" ><i class="fa fa-times"> </i> Cancel</a></td></tr>');
                        }
                    }
                });
                $.getJSON("/api/Common/GetRequest/idnumber/" + IDNumber + "/username/" + Username).done(function (data) {
                    $('#table-request-active').empty();
                    //$('#display-total').html('<code>Total:</code>' + data.length + ' items');
                    if (data.length > 0) {
                        for (var i = 0; i < data.length; i++) {
                            if (data[i].Status != "Declined" && data[i].Status != "Cancelled"&& data[i].Status !="Closed") {
                                $('#table-request-active').append('<tr><td>' + data[i].Id_Request + '</td><td>' + data[i].formatted_transac_date + '</td><td>' + data[i].Purpose + '</td><td><a href="#" onclick="showCartItems(this)" data-cartid ="' + data[i].Id_Cart + '" >View-Cart</a></td><td>' + data[i].Status + '</td><td></tr>');
                            }
                        }
                    }
                });
                $('#create-request').click(function () {
                    var Username = $('#Username').val();
                    var IDNumber = $('#IDNumber').val();
                    $.getJSON("/api/Common/GetAllActiveRequest/idnumber/" + IDNumber + "/username/" + Username).done(function (data) {
                        if (data.length < 3) {
                            $('.modal-Request-Form').modal('show');
                        } else {
                            ErrorMessage("Cannot proceed. You currently have 3 active requests.");
                        }
                    })

                })
                $('#add-item-request').click(function () {
                    $('#modal-Request-Form-Add-Item').modal('show');
                })
                $('.daterange').daterangepicker();

                $.getJSON("/api/Common/GetItemNames").done(function (data) {
                    for (var i = 0; i < data.length; i++) {
                        $('#Item-Names').append('<option>' + data[i].Item_Name + '</option>');
                    }

                })

                $('select').select2({
                    dropdownParent: $('#modal-Request-Form-Add-Item')
                });

                $('#add-Item-Borrow').click(function () {
                    var Item_Name = $('#Item-Names').val();
                    var Qty = $('#Qty-Borrow').val();
                    //var Date_Range = $('#daterange-Borrow').val();
                    //var Purpose = $('#purpose-Borrow').val();

                    $('#list-items-Borrow').append('<tr><td>' + Item_Name + '</td><td>' + Qty + '</td><td><i class="fa fa-trash" onclick="remove(this)"></i></td></tr>');
                    $('#modal-Request-Form-Add-Item').modal('hide');
                })

                $('#submit-Request-Borrow').click(function () {
                    if ($('#list-items-Borrow tr').length > 0) {
                        $('.modal-Date-Purpose').modal('show');
                        $('.modal-Request-Form').modal('hide');
                    } else {
                        ErrorMessage("Not items to be submit.");
                    }
                })

                $(".modal-Date-Purpose").on('hide.bs.modal', function () {
                    $('.modal-Request-Form').modal('show');
                });
                //$(".modal-Request-Form").on('hide.bs.modal', function () {
                //    $('#list-items-Borrow').empty();
                //});

                $('#recieve-Date').bootstrapMaterialDatePicker({
                    format: 'MM/DD/YYYY',
                    time: false,
                    minDate: new Date()
                });
                $('#return-Date').bootstrapMaterialDatePicker({
                    format: 'MM/DD/YYYY',
                    time: false,
                    minDate: new Date()
                });

                $('#cancel-Borrow').click(function () {
                    $('#list-items-Borrow').empty();
                });

                $('#submit-Request').click(function () {

                    var Date_Receive = $('#recieve-Date').val();
                    var Date_Return = $('#return-Date').val();
                    var Purpose = $('#purpose-Borrow').val();

                    var Errors = [];
                    if (!Date_Receive && Date_Receive === "") { Errors.push("Input date want to receive"); }
                    if (!Date_Return && Date_Return === "") { Errors.push("Input expected date of return."); }
                    if (!Purpose && Purpose === "") { Errors.push("Input purpose."); }

                    if (Errors.length === 0) {
                        var data = Array();
                        $("#list-items-Borrow tr").each(function (i, v) {
                            data[i] = Array();
                            $(this).children('td').each(function (ii, vv) {
                                data[i][ii] = $(this).text();
                            });
                        })
                        var Items = [];
                        for (var i = 0; i < data.length; i++) {
                            var item = {
                                'Item_Name': data[i][0],
                                'Qty': data[i][1]
                            }
                            Items.push(item);
                        }

                        var Request = {
                            'Date_Want_To_Receive': Date_Receive,
                            'Date_Expected_Return': Date_Return,
                            'Purpose': Purpose,
                            'Items_Request': Items
                        }
                        /// SAVE TO DATABASE------------------>>..>>
                        $.ajax({
                            type: "POST",
                            url: "/Borrowing/AjaxSendRequest",
                            data: JSON.stringify(Request),
                            contentType: "application/json; charset=utf-8",
                            dataType: "json",
                            success: function (response) {
                                if (response.Message == "success") {
                                    $('#Type_Notification').val("Borrowing");
                                    $('#GeneralNotifyButton').click();
                                    SuccessMessage("Your Request Successfully submitted.Just wait for the notification.");
                                    setTimeout(function () {
                                        location.reload();
                                    }, 1200);
                                } else {
                                    ErrorMessage("Server error!");
                                }
                            },
                            failure: function (response) {
                                ErrorMessage(response.responseText);
                            },
                            error: function (response) {
                                ErrorMessage(response.responseText);
                            }
                        });
                    } else {
                        ErrorMessage(Errors[0]);
                    }
                })
            })


            function remove(el) {
                $(el).parent().parent().remove();
            }

            function showCartItems(el) {
                var cartid = $(el).data('cartid');

                $('#table-cart-Items').empty();
                $.getJSON("/api/Common/GetCartItems/cartid" + cartid).done(function (data) {
                    $('#display-total').empty();
                    $('#display-total').append('<code>Total:</code>' + data.length + ' items');
                    if (data.length > 0) {
                        for (var i = 0; i < data.length; i++) {
                            $('#table-cart-Items').append('<tr><td>' + data[i].Item_Name + '</td><td>' + data[i].Status + '</td></tr>');
                        }
                    }
                });
                $('.modal-View-Cart').modal('show');
            }


            function CancelRequest(el) {
                var idRequest = $(el).data('requestid');
                var idCart = $(el).data('cartid');

                $.ajax({
                    type: "POST",
                    url: "/Borrowing/AjaxCancelRequest",
                    data: '{idr:' + idRequest + ',idc:' + idCart + '}',
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        if (response.Message == "success") {
                            SuccessMessage("Your Request Successfully cancelled.");
                            setTimeout(function () {
                                location.reload();
                            }, 1200);
                        } else {
                            ErrorMessage(response.Message);
                        }
                    },
                    failure: function (response) {
                        ErrorMessage(response.responseText);
                    },
                    error: function (response) {
                        ErrorMessage(response.responseText);
                    }
                });

            }

            //=========== (START) function for show Success message ===========||
            function SuccessMessage(message) {
                notify("top", "center", "fa fa-check", "success", "animated bounceIn", "animated bounceOut", " " + message);
            }
            //=========== (END) function for show Success message ===========||

            //=========== (START) function for show Info message ===========||
            function InfoMessage(message) {
                notify("top", "center", "fa fa-info", "info", "animated bounceIn", "animated bounceOut", " " + message);
            }
            //=========== (END) function for show Info message ===========||

            //=========== (START) function for show Erorr message ===========||
            function ErrorMessage(message) {
                notify("top", "center", "fa fa-times", "danger", "animated bounceIn", "animated bounceOut", " " + message);
            }
            //=========== (END) function for show Erorr message ===========||
            //=========== (START) function to display Message ===========||
            function notify(from, align, icon, type, animIn, animOut, mess) {
                $.growl({
                    icon: icon,
                    title: '',
                    message: mess,
                    url: ''
                }, {
                    element: 'body',
                    type: type,
                    allow_dismiss: true,
                    placement: {
                        from: from,
                        align: align
                    },
                    offset: { x: 30, y: 30 },
                    spacing: 10,
                    z_index: 999999,
                    delay: 2500,
                    timer: 1000,
                    url_target: '_blank',
                    mouse_over: false,
                    animate: {
                        enter: animIn,
                        exit: animOut
                    },
                    icon_type: 'class',
                    template: '<div data-growl="container" class="alert" role="alert">' +
                        '<button type="button" class="close" data-growl="dismiss">' +
                        '<span aria-hidden="true">&times;</span>' +
                        '<span class="sr-only">Close</span>' +
                        '</button>' +
                        '<span data-growl="icon"></span>' +
                        '<span data-growl="title"></span>' +
                        '<span data-growl="message"></span>' +
                        '<a href="#!" data-growl="url"></a>' +
                        '</div>'
                });
            };
            //=========== (END) function to display Message ===========||
        </script>
    }
}
else if (Model._Partial == "_AdminPage")
{
    @section scripts{
        <script src="~/Scripts/scannerdetection/jquery.scannerdetection.js"></script>
        <script>
            //=========== START of Document.ready function ===========||
            $(document).ready(function () {

                $('.select2').select2();
                // To Retain Current Selected Pane ----------------
                $('#pills-tab a').click(function (e) {
                    e.preventDefault();
                    $(this).tab('show');
                });
                // store the currently selected tab in the hash value
                $("ul.nav-pills > li > a").on("shown.bs.tab", function (e) {
                    var id = $(e.target).attr("href").substr(1);
                    if (id === "pills-pending-request") {
                        pills_pending_request_Function();
                    } else if (id === "pills-all-request") {
                        pills_all_request_Function();
                    } else if (id === "pills-release-item-request") {
                        pills_release_item_request_Function();
                    } else if (id === "pills-return-item-request") {
                        pills_return_item_request_Function();
                    }
                    window.location.hash = id;
                });
                // on load of the page: switch to the currently selected tab
                var hash = window.location.hash;
                $('#pills-tab a[href="' + hash + '"]').tab('show');
                if (hash === "#pills-pending-request" || hash === "") {
                    pills_pending_request_Function();
                } else if (hash === "#pills-all-request") {
                    pills_all_request_Function();
                } else if (hash === "#pills-release-item-request") {
                    pills_release_item_request_Function();
                } else if (hash === "#pills-return-item-request") {
                    pills_return_item_request_Function();
                }
                // END of To Retain Current Selected Pane ----------------


            })
            //=========== END of Document.ready function ===========||


            //<<<<=============================== (START) PILLS PENDING REQUEST ===============================>>>>\\
            function pills_pending_request_Function() {
                $.getJSON("/api/Common/GetAllOpenRequest").done(function (data) {
                    $('#table-all-pending-request').empty();
                    if (data.length > 0) {
                        for (var i = 0; i < data.length; i++) {
                            $('#table-all-pending-request').append('<tr><td>' + data[i].Id_Request + '</td><td>' + data[i].Requestor_Full_Name + '</td><td>' + data[i].formatted_transac_date + '</td><td>' + data[i].Purpose + '</td><td><a href="#pills-pending-request" onclick="ShowCartPendingRequest(this)" data-cartid="' + data[i].Id_Cart + '" data-requestid="' + data[i].Id_Request + '" data-requestorfullname="' + data[i].Requestor_Full_Name + '" data-requestoridnumber="' + data[i].Id_Number + '">View-Cart</a></td></>');
                        }
                    }
                })
            }
            function ShowCartPendingRequest(el) {
                $('#table-pending-cart-items').empty();
                var idCart = $(el).data('cartid');
                var idRequest = $(el).data('requestid');
                var RequestorFullName = $(el).data('requestorfullname');
                var RequestorIdNumber = $(el).data('requestoridnumber');

                $('#header-details-request').html('Request No. ' + idRequest + ' - ' + RequestorFullName);
                $('#hidden-request-id').val(idRequest);

                $.getJSON("/api/Common/GetCartItems/cartid" + idCart).done(function (data) {
                    if (data.length > 0) {
                        var counter = 0;
                        for (var i = 0; i < data.length; i++) {
                            if (data[i].Status === "Pending") {
                                $('#table-pending-cart-items').append('<tr><td>' + data[i].Item_Name + '</td><td>' + data[i].Date_Want_To_Receive + '</td><td>' + data[i].Date_Expected_Return + '</td><td>' + data[i].Purpose + '</td><td><ul class="pagination"><li class="page-item"><a class="page-link ApprovedItem" href="#pills-pending-request" id="" data-id="' + data[i].Id + '" data-cartid="' + idCart + '"  data-requestid="' + idRequest + '" data-requestoridnumber="' + RequestorIdNumber + '">Approve</a></li>&nbsp;<li class="page-item"><a class="page-link text-c-red DeclineItem" data-id="' + data[i].Id + '"  data-cartid="' + idCart + '"  data-requestid="' + idRequest + '"  data-requestoridnumber="' + RequestorIdNumber + '" id="" style="color:red">Decline</a></li></ul></td></tr>');
                                counter++;
                            }
                        }
                        $('#hidden-request-count').val(counter);
                    }
                });
                $('#modal-cart').modal().show();
            }


            $('#ApprovedAllItem').click(function () {
                $('#modal-cart').modal().hide();
                Swal.fire({
                    type: 'success',
                    html: 'Successfully Approved',
                    confirmButtonClass: 'btn btn-success',
                    buttonsStyling: false,
                    timer: 2000
                }).then(function () {
                    location.reload();
                });
            })

            $('#table-pending-cart-items').on('click', '.ApprovedItem', function () {
                var id = $(this).data('id');
                var cartid = $(this).data('cartid');
                var requestid = $(this).data('requestid');
                var requestoridnumber = $(this).data('requestoridnumber');
                var param = {
                    'Id': id,
                    'cartid': cartid,
                    'requestid': requestid
                };
                var el = $(this);
                $.ajax({
                    type: "POST",
                    url: "/Borrowing/AjaxApproveItem",
                    data: JSON.stringify(param),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        if (response.Message == "success") {
                            $('#Receivers_Message_Notification').val("One of your request item from the request id: " + requestid + " has been approved");
                            $('#ID_Receiver_Notification').val(requestoridnumber);
                            $('#UserNotifyButton').click();
                            toastr.success('One Item Successfully approved');
                            el.parent().parent().parent().parent().remove();
                            if ($('#table-pending-cart-items > tr').length === 0) {
                                //CALL SEND SMS Notification ---------------------------->
                                SendNotificationToUser(requestid);
                                
                            }
                        } else {
                            ErrorMessage(response.Message);
                        }
                    },
                    failure: function (response) {
                        ErrorMessage(response.responseText);
                    },
                    error: function (response) {
                        ErrorMessage(response.responseText);
                    }
                });
            });

            $('#table-pending-cart-items').on('click', '.DeclineItem', function () {
                $('#modal-cart').modal().hide();
                var id = $(this).data('id');
                var cartid = $(this).data('cartid');
                var requestid = $(this).data('requestid');
                var requestidnumber = $(this).data('requestoridnumber');

                var el = $(this);
                var dat = $(this);
                var notice = new PNotify({
                    title: 'Input needed', text: 'Put comment/remarks for declining this request',
                    hide: false,
                    confirm: {
                        prompt: true,
                        prompt_multi_line: true,
                        prompt_default: '',
                        buttons: [{
                            text: 'Yes', addClass: 'btn btn-sm btn-primary'
                        },
                        {
                            addClass: 'btn btn-sm btn-link'
                        }]
                    },
                    buttons: {
                        closer: false,
                        sticker: false
                    },
                    history: {
                        history: false
                    }
                });
                notice.get().on('pnotify.confirm', function (e, notice, val) {

                    if (val.length > 0) {
                        var param = {
                            'Id': id,
                            'cartid': cartid,
                            'requestid': requestid,
                            'remarks': val
                        };
                        $.ajax({
                            type: "POST",
                            url: "/Borrowing/AjaxDeclineItem",
                            data: JSON.stringify(param),
                            contentType: "application/json; charset=utf-8",
                            dataType: "json",
                            success: function (response) {
                                if (response.Message == "success") {
                                    $('#Receivers_Message_Notification').val("One of your request item from the request id: " + requestid + " has been declined");
                                    $('#ID_Receiver_Notification').val(requestidnumber);
                                    $('#UserNotifyButton').click();
                                    toastr.success("Request rejected");
                                    $('#modal-cart').modal().show();
                                    dat.parent().parent().parent().parent().remove();
                                    if ($('#table-pending-cart-items > tr').length === 0) {
                                        //CALL SEND SMS Notification--------------------------------------->
                                        SendNotificationToUser(requestid);
                                        
                                    }
                                    //SendNotificationToUser("One of your request item from the request id: " + requestid +" has been approved");
                                } else {
                                    ErrorMessage(response.Message);
                                }
                            },
                            failure: function (response) {
                                ErrorMessage(response.responseText);
                            },
                            error: function (response) {
                                ErrorMessage(response.responseText);
                            }
                        });

                    } else {
                        toastr.error("Remarks is needed");
                        notice.cancelRemove();
                    }
                    //notice.cancelRemove().update({
                    //    title: 'Your remarks',
                    //    text: $('<div/>').text(val).html(),
                    //    icon: 'icon-checkmark3',
                    //    type: 'success',
                    //    hide: true,
                    //    confirm: { prompt: false },
                    //    buttons: { closer: true, sticker: true }
                    //});
                });
                notice.get().on('pnotify.cancel', function (e, notice) {
                    //notice.cancelRemove().update({
                    //    title: 'Rejecting request cancelled',
                    //    text: 'Rejecting request need comment/remarks',
                    //    icon: 'icon-blocked',
                    //    type: 'error',
                    //    hide: true,
                    //    confirm: { prompt: false },
                    //    buttons: { closer: true, sticker: true }
                    //});
                    $('#modal-cart').modal().show();
                });
            });

            $('#x-close-modal-cart').click(function () {
                if (Number($('#hidden-request-count').val()) === $('#table-pending-cart-items > tr').length || $('#table-pending-cart-items > tr').length == 0) {
                    $('#x-close').click();
                } else {
                    toastr.error("Please decide either approved or declined the remaining pending items");
                }

                //location.reload();
            })

            $('#x-close').click(function () {
                location.reload();
            })

            // SMS Notification
            function SendNotificationToUser(idRequest) {
                $.ajax({
                    type: "POST",
                    url: "/Borrowing/SendSMSNotification",
                    data: '{idr:' + idRequest +'}',
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        if (response.Message == "success") {
                            SuccessMessage("SMS notification will be send to user.");
                            setTimeout(function () {
                                $('#x-close').click();
                            }, 1500)
                        } else {
                            ErrorMessage("cannot send SMS notification to user.");
                            setTimeout(function () {
                                $('#x-close').click();
                            }, 1500)
                        }
                    },
                    failure: function (response) {
                        ErrorMessage(response.responseText);
                        setTimeout(function () {
                            $('#x-close').click();
                        }, 1500)
                    },
                    error: function (response) {
                        ErrorMessage(response.responseText);
                        setTimeout(function () {
                            $('#x-close').click();
                        }, 1500)
                    }
                });
                
            }
            //<<<<=============================== (END) PILLS PENDING REQUEST ===============================>>>>\\


            //<<<<=============================== (START) PILLS ALL REQUEST ===============================>>>>\\
            function pills_all_request_Function() {
                $('#table-all-Request').empty();
                $.getJSON("/api/Common/GetAllRequest").done(function (data) {
                    for (var i = 0; i < data.length; i++) {
                        $('#table-all-Request').append('<tr><td>' + data[i].Id_Request + '</td><td>' + data[i].Requestor_Full_Name + '</td><td>' + data[i].formatted_transac_date + '</td><td>' + data[i].Purpose + '</td><td><a href="#pills-pending-request" onclick="ShowCartPRequest(this)" data-cartid="' + data[i].Id_Cart + '" data-requestid="' + data[i].Id_Request + '" data-requestorfullname="' + data[i].Requestor_Full_Name + '">View-Cart</a></td><td>' + data[i].Status + '</td></>');
                    }
                });
            }
            //<<<<=============================== (END) PILLS ALL REQUEST ===============================>>>>\\


            //<<<<=============================== (START) PILLS RELEASE ITEM ===============================>>>>\\
            function pills_release_item_request_Function() {
                $('#Search-Item-For-Released').focus();
            }

            $('#Search-Item-For-Released').keypress(function (ev) {
                var key = ev.keyCode;
                if (key === 13) {
                    $.getJSON("/api/Common/GetForReleaseRequest?key=" + $(this).val()).done(function (data) {
                        $('#table-for-released').empty();
                        if (data !== null) {
                            if (data.length > 0) {
                                for (var i = 0; i < data.length; i++) {
                                    $('#table-for-released').append('<tr><td>' + data[i].Id_Request + '</td><td>' + data[i].Requestor_Full_Name + '</td><td>' + data[i].formatted_transac_date + '</td><td>' + data[i].Purpose + '</td><td>' + data[i].Status + '</td><td><a href="#pills-release-item-request" onclick="ShowCartForReleasedRequest(this)" data-cartid="' + data[i].Id_Cart + '" data-requestid="' + data[i].Id_Request + '" data-requestorfullname="' + data[i].Requestor_Full_Name + '" data-requestoridnumber="' + data[i].Id_Number + '">View-Approved-Item</a></td></>');
                                }
                                $('#Search-Item-For-Released').val("");
                            } else {
                                $('#table-for-released').empty();
                                ErrorMessage("No approved request found!.")
                                $('#Search-Item-For-Released').val("");
                            }
                        } else {
                            $('#table-for-released').empty();
                            ErrorMessage("No approved request found!.")
                            $('#Search-Item-For-Released').val("");

                        }
                        //SuccessMessage(JSON.stringify(data));
                    })
                    //alert("Enter key");

                }
            })

            $('#Search-Item-For-Released').scannerDetection({
                timeBeforeScanTest: 200, // wait for the next character for upto 200ms
                startChar: [120], // Prefix character for the cabled scanner (OPL6845R)
                endChar: [13], // be sure the scan is complete if key 13 (enter) is detected
                avgTimeByChar: 40, // it's not a barcode if a character takes longer than 40ms
                onComplete: function (barcode, qty) {
                    $.getJSON("/api/Common/GetForReleaseRequest?key=" + barcode).done(function (data) {
                        $('#table-for-released').empty();
                        if (data !== null) {
                            if (data.length > 0) {
                                for (var i = 0; i < data.length; i++) {
                                    $('#table-for-released').append('<tr><td>' + data[i].Id_Request + '</td><td>' + data[i].Requestor_Full_Name + '</td><td>' + data[i].formatted_transac_date + '</td><td>' + data[i].Purpose + '</td><td>' + data[i].Status + '</td><td><a href="#pills-release-item-request" onclick="ShowCartForReleasedRequest(this)" data-cartid="' + data[i].Id_Cart + '" data-requestid="' + data[i].Id_Request + '" data-requestorfullname="' + data[i].Requestor_Full_Name + '" data-requestoridnumber="' + data[i].Id_Number + '">View-Approved-Item</a></td></>');
                                }
                                $('#Search-Item-For-Released').val("");
                            } else {
                                $('#table-for-released').empty();
                                $('#Search-Item-For-Released').val("");
                                ErrorMessage("No approved request found!.")
                            }
                        } else {
                            $('#table-for-released').empty();
                            ErrorMessage("No approved request found!.")
                            $('#Search-Item-For-Released').val("");
                        }
                        //SuccessMessage(JSON.stringify(data));
                    })
                }

            });

            function ShowCartForReleasedRequest(el) {
                var cartId = $(el).data('cartid');
                var rqstorFName = $(el).data('requestorfullname');
                var rqstId = $(el).data('requestid');
                var rqstorIdnumber = $(el).data('requestoridnumber');
                $('#hiddenRequestorFullName').val(rqstorFName);
                $('#header-details-release').text("Requestor: " + rqstorFName);

                $.getJSON("/api/Common/GetCartItems/cartid" + cartId).done(function (data) {
                    // SuccessMessage(JSON.stringify(data));
                    $('#table-for-release-cart-items').empty();
                    if (data != null) {
                        if (data.length > 0) {
                            var counteForReleaseItems = 0;
                            for (var i = 0; i < data.length; i++) {
                                if (data[i].Status === "Approved") {
                                    counteForReleaseItems++;
                                    $('#table-for-release-cart-items').append('<tr>' +
                                        '<td id="'+data[i].Id+'">' + data[i].Item_Name + '</td>' +
                                        '<td>' + data[i].Date_Expected_Return + '</td>' +
                                        '<td>' +
                                        '<select class="form-control" id="'+data[i].Id+'condition"><option>Functional</option><option>Damaged</option></select>' +
                                        '</td > ' +
                                        '<td><input type="text" class="form-control" id="' + data[i].Id + 'remarks" /><input type="text" hidden class="form-control strs" id="' + data[i].Id + 'strcode" /></td>' +
                                        '<td class="text-center">' +
                                        '<div class="custom-control custom-checkbox" id="checks-label">' +
                                        '<input type="checkbox"  disabled class="custom-control-input" id="' + data[i].Id + 'checkb">' +
                                        '<label class="custom-control-label "  for="confirmReleased1"></label>' +
                                        '</div>' +
                                        '</td>' +
                                        '<td>' +
                                        '<ul class="pagination">' +
                                        '<li class="page-item"><a class="page-link" data-id="' + data[i].Id + '" data-expdateofr="' + data[i].Date_Expected_Return + '" data-requestid="' + rqstId + '" onclick="ReleaseItem(this)">Release</a></li>&nbsp;' +
                                        '<li class="page-item"><a class="page-link text-c-red" data-id="' + data[i].Id + '" data-idnumber="' + rqstorIdnumber + '" data-requestid="' + rqstId + '" onclick="DiscardItem(this)" style="color:red">Discard</a></li>' +
                                        '</ul>' +
                                        '</td>' +
                                        '</tr>')
                                }
                            }
                            $('#hiddenCountForReleaseItems').val(counteForReleaseItems);
                        }
                    }
                })
                $('#modal-cart-for-released').modal('show');
            }


            function ReleaseItem(el) {

                var id = $(el).data('id');
                var requestid = $(el).data('requestid');
                var expDateofReturn = $(el).data('expdateofr');
                var strcode = $('#' + id + 'strcode').val();
                var ConditionB4Release = $('#' + id + 'condition').val();
                var Remarks4Release = $('#' + id + 'remarks').val();
                var param = {
                    'idcart': id,
                    'strcode': strcode,
                    'conditionb4release': ConditionB4Release,
                    'remarks4release': Remarks4Release,
                    'releasedto': $('#hiddenRequestorFullName').val(),
                    'expdateofreturn': expDateofReturn,
                    'requestid': requestid
                }
                if (strcode != "") {
                    $.ajax({
                        type: "POST",
                        url: "/Borrowing/AjaxReleaseItem",
                        data: JSON.stringify(param),
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (response) {
                            if (response.Message == "success") {
                                SuccessMessage("Released items");
                                $(el).parent().parent().parent().parent().remove();
                                if ($('#table-for-release-cart-items > tr').length === 0) {
                                    $('#x-close-release').click();
                                    setTimeout(function () {
                                        location.reload();
                                    }, 100);
                                }

                            } else {
                                ErrorMessage(response.Message);
                            }
                        },
                        failure: function (response) {
                            ErrorMessage(response.responseText);
                        },
                        error: function (response) {
                            ErrorMessage(response.responseText);
                        }
                    });
                } else {
                    ErrorMessage("Scan first the item to released");
                }
            }

            function DiscardItem(el) {
                var id = $(el).data('id');
                var userIdNumber = $(el).data('idnumber');
                var requestid = $(el).data('requestid');
                var strcode = $('#' + id + 'strcode').val();
                // $(el).parent().parent().parent().parent().remove();
                $('#modal-cart-for-released').modal().hide();
                $('#hiddenIsDiscardItemClicked').val("YES");
                var notice = new PNotify({
                    title: 'Just confirmation.',
                    text: 'Scan user RF or Input user IDNumber.Then click Yes.',
                    hide: false,
                    confirm: {
                        prompt: true,
                        buttons: [{ text: 'Yes', addClass: 'btn btn-sm btn-primary' }, { addClass: 'btn btn-sm btn-link' }]
                    },
                    buttons: { closer: false, sticker: false },
                    history: { history: false }
                });
                notice.get().on('pnotify.confirm', function (e, notice, val) {
                    if (val.length > 0) {
                        $.getJSON("/api/Common/GetUsers/key" + val).done(function (data) {
                            if (data != null) {
                                if (String(data.ID_Number) === String(userIdNumber)) {
                                    var param = {
                                        'id': id,
                                        'requestid': requestid
                                    }
                                    $.ajax({
                                        type: "POST",
                                        url: "/Borrowing/AjaxDiscardItem",
                                        data: JSON.stringify(param),
                                        contentType: "application/json; charset=utf-8",
                                        dataType: "json",
                                        success: function (response) {
                                            if (response.Message == "success") {
                                                SuccessMessage("Item is discard.");
                                                $(el).parent().parent().parent().parent().remove();
                                                $('#hiddenIsDiscardItemClicked').val("");
                                                $('#modal-cart-for-released').modal().show();
                                                if ($('#table-for-release-cart-items > tr').length === 0) {
                                                    $('#x-close-release').click();
                                                    setTimeout(function () {
                                                        location.reload();
                                                    }, 100);
                                                }

                                            } else {
                                                ErrorMessage(response.Message);
                                                notice.cancelRemove();
                                            }
                                        },
                                        failure: function (response) {
                                            ErrorMessage(response.responseText);
                                            notice.cancelRemove();
                                        },
                                        error: function (response) {
                                            ErrorMessage(response.responseText);
                                            notice.cancelRemove();
                                        }
                                    });
                                } else {
                                    ErrorMessage("Not confirmed. User is not the owner of the request. Please try again.");
                                    notice.cancelRemove();
                                }
                            } else {
                                ErrorMessage("Not confirmed. Please try again.");
                                notice.cancelRemove();
                            }
                        })
                    } else {
                        ErrorMessage("Input needed to confirm!");
                        notice.cancelRemove();
                    }
                })
                notice.get().on('pnotify.cancel', function (e, notice) {
                    $('#hiddenIsDiscardItemClicked').val("");
                    $('#modal-cart-for-released').modal().show();
                });
            }

            $('#x-close-modal-release').click(function () {
                if ($('#table-for-release-cart-items > tr').length === Number($('#hiddenCountForReleaseItems').val())) {
                    $('#x-close-release').click();
                } else {
                    ErrorMessage("You've just decided to some item/s.Please decide if you want to released or discard the remaining items");
                }

            });

            //<<<<=============================== (END) PILLS RELEASE ITEM ===============================>>>>\\


            //<<<<=============================== (START) PILLS RETURN ITEM  ===============================>>>>\\
            function pills_return_item_request_Function() {
                $('#Search-Item-For-Returned').focus();
            }

            $('#Search-Item-For-Returned').keypress(function (ev) {
                var key = ev.keyCode;
                if (key === 13) {
                    $.getJSON("/api/Common/GetForReturnRequest?key=" + $(this).val()).done(function (data) {
                        $('#table-for-return').empty();
                        if (data !== null) {
                            if (data.length > 0) {
                                for (var i = 0; i < data.length; i++) {
                                    $('#table-for-return').append('<tr><td>' + data[i].Id_Request + '</td><td>' + data[i].Requestor_Full_Name + '</td><td>' + data[i].formatted_transac_date + '</td><td>' + data[i].Purpose + '</td><td>' + data[i].Status + '</td><td><a href="#pills-return-item-request" onclick="ShowCartForReturnedRequest(this)" data-cartid="' + data[i].Id_Cart + '" data-requestid="' + data[i].Id_Request + '" data-requestorfullname="' + data[i].Requestor_Full_Name + '" data-requestoridnumber="' + data[i].Id_Number + '">View</a></td></>');
                                }
                                $('#Search-Item-For-Returned').val("");
                            } else {
                                $('#table-for-return').empty();
                                ErrorMessage("No request found!");
                                $('#Search-Item-For-Returned').val("");
                            }
                        } else {
                            $('#table-for-return').empty();
                            ErrorMessage("No request found!");
                            $('#Search-Item-For-Returned').val("");
                        }
                        //SuccessMessage(JSON.stringify(data));
                    })
                    //alert("Enter key");

                }
            })

            $('#Search-Item-For-Returned').scannerDetection({
                timeBeforeScanTest: 200, // wait for the next character for upto 200ms
                startChar: [120], // Prefix character for the cabled scanner (OPL6845R)
                endChar: [13], // be sure the scan is complete if key 13 (enter) is detected
                avgTimeByChar: 40, // it's not a barcode if a character takes longer than 40ms
                onComplete: function (barcode, qty) {
                    $.getJSON("/api/Common/GetForReturnRequest?key=" + barcode).done(function (data) {
                        $('#table-for-return').empty();
                        if (data !== null) {
                            if (data.length > 0) {
                                for (var i = 0; i < data.length; i++) {
                                    $('#table-for-return').append('<tr><td>' + data[i].Id_Request + '</td><td>' + data[i].Requestor_Full_Name + '</td><td>' + data[i].formatted_transac_date + '</td><td>' + data[i].Purpose + '</td><td>' + data[i].Status + '</td><td><a href="#pills-return-item-request" onclick="ShowCartForReturnedRequest(this)" data-cartid="' + data[i].Id_Cart + '" data-requestid="' + data[i].Id_Request + '" data-requestorfullname="' + data[i].Requestor_Full_Name + '" data-requestoridnumber="' + data[i].Id_Number + '">View</a></td></>');
                                }
                                $('#Search-Item-For-Returned').val("");
                            } else {
                                $('#table-for-return').empty();
                                ErrorMessage("No request found!");
                                $('#Search-Item-For-Returned').val("");
                            }
                        } else {
                            $('#table-for-return').empty();
                            ErrorMessage("No request found!");
                            $('#Search-Item-For-Returned').val("");
                        }
                        //SuccessMessage(JSON.stringify(data));
                    })
                }

            });


            $('#Scan-item-to-return').scannerDetection({
                timeBeforeScanTest: 200, // wait for the next character for upto 200ms
                startChar: [120], // Prefix character for the cabled scanner (OPL6845R)
                endChar: [13], // be sure the scan is complete if key 13 (enter) is detected
                avgTimeByChar: 40, // it's not a barcode if a character takes longer than 40ms
                onComplete: function (barcode, qty) {
                    $(".strcodereturn").each(function () {
                        if (barcode === $(this).val()) {
                            SuccessMessage("One item matched!.");
                            var id = $(this).data('id');
                            $('#' + id + 'checksreturn').attr('checked', true);
                            $('#Scan-item-to-return').val("");
                        }
                    });
                }

            });


            function ShowCartForReturnedRequest(el) {
                var cartId = $(el).data('cartid');
                var rqstorFName = $(el).data('requestorfullname');
                var rqstId = $(el).data('requestid');
                var rqstorIdnumber = $(el).data('requestoridnumber');
                $('#hiddenRequestorFullNamereturn').val(rqstorFName);
                $('#header-details-return').text("Requestor: " + rqstorFName);

                $.getJSON("/api/Common/GetCartItems/cartid" + cartId).done(function (data) {
                    // SuccessMessage(JSON.stringify(data));
                    $('#table-for-return-cart-items').empty();
                    if (data != null) {
                        if (data.length > 0) {
                            var counteForRetrunItems = 0;
                            for (var i = 0; i < data.length; i++) {
                                if (data[i].Status === "Released") {
                                    counteForRetrunItems++;
                                    $('#table-for-return-cart-items').append('<tr>' +
                                        '<td>' + data[i].Item_Name + '</td>' +
                                        '<td>' + data[i].Codition_Before_Released + '</td>' +
                                        '<td>' + data[i].Remarks_for_Released + '<input value="' + data[i].Str_Code + '" hidden id="' + data[i].Id + 'strcode" data-id="' + data[i].Id + '" class="strcodereturn"></td>' +
                                        '<td class="text-center">' +
                                        '<div class="custom-control custom-checkbox">' +
                                        '<input type="checkbox" class="custom-control-input" id="' + data[i].Id + 'checksreturn">' +
                                        '<label class="custom-control-label" for=""></label>' +
                                        '</div>' +
                                        '</td>' +
                                        '<td>' +
                                        '<select class="form-control"  id="' + data[i].Id + 'returnedcondition" style="width: 80%;">' +
                                        '<option value="Functional">Functional</option>' +
                                        '<option value="Damaged">Damaged</option>' +
                                        '</select>' +
                                        '</td>' +
                                        '<td>' +
                                        '<input type="text" class="form-control" id="' + data[i].Id + 'returnedremarks" style="" />' +
                                        '</td > '+
                                        '<td>' +
                                        '<ul class="pagination">' +
                                        '<li class="page-item"><a class="page-link" href="#pills-return-item-request" onclick = CloseItem(this) id="' + data[i].Id + 'returnedbutclose" data-id="' + data[i].Id + '" data-requestid="' + rqstId + '" style="">Close</a></li>' +
                                        '</ul>' +
                                        '</td>' +
                                        '</tr>')
                                }
                            }
                            $('#hiddenCountForReturnItems').val(counteForRetrunItems);
                        }
                    }
                })
                $('#modal-cart-for-return').modal('show');
            }

            function CloseItem(el) {
                var id = $(el).data('id');
                var requestid = $(el).data('requestid');
                var item_Scanned = $('#' + id + 'checksreturn').attr('checked');
                var item_returncondition = $('#' + id + 'returnedcondition').val();
                var item_returnremarks = $('#' + id + 'returnedremarks').val();
                if (item_Scanned) {

                    $('#modal-cart-for-return').modal().hide();
                    var notice = new PNotify({
                        title: 'Confirmation of item remarks and codition',
                        text: '<p>Item Condition: <code>' + item_returncondition + '</code></p><p>Remarks: <code>' + item_returnremarks + '</code></p>',
                        hide: false,
                        type: 'warning',
                        confirm: {
                            confirm: true,
                            buttons: [{
                                text: 'Yes',
                                addClass: 'btn btn-sm btn-primary'
                            }, { addClass: 'btn btn-sm btn-link' }]
                        },
                        buttons: { closer: false, sticker: false },
                        history: { history: false }
                    })
                    notice.get().on('pnotify.confirm', function () {
                        var param = {
                            'id': id,
                            'itemreturnC': item_returncondition,
                            'itemreturnR': item_returnremarks,
                            'requestid': requestid
                        }
                        $.ajax({
                            type: "POST",
                            url: "/Borrowing/AjaxReturnItem",
                            data: JSON.stringify(param),
                            contentType: "application/json; charset=utf-8",
                            dataType: "json",
                            success: function (response) {
                                if (response.Message == "success") {
                                    SuccessMessage("One item just returned.");
                                    $(el).parent().parent().parent().parent().remove();
                                    $('#modal-cart-for-return').modal().show();
                                    if ($('#table-for-return-cart-items > tr').length === 0) {
                                        $('#x-close-release').click();
                                        setTimeout(function () {
                                            location.reload();
                                        }, 1000);
                                    }
                                } else {
                                    ErrorMessage(response.Message);
                                    
                                }
                            },
                            failure: function (response) {
                                ErrorMessage(response.responseText);
                                
                            },
                            error: function (response) {
                                ErrorMessage(response.responseText);
                               
                            }
                        });
                       
                    })
                    notice.get().on('pnotify.cancel', function () { $('#modal-cart-for-return').modal().show(); });
                } else {
                    ErrorMessage("Scan item first to confirm");
                }
            }


          

            //<<<<=============================== (END) PILLS RETURN ITEM  ===============================>>>>\\

            

            $(document).scannerDetection({
                timeBeforeScanTest: 200, // wait for the next character for upto 200ms
                startChar: [120], // Prefix character for the cabled scanner (OPL6845R)
                endChar: [13], // be sure the scan is complete if key 13 (enter) is detected
                avgTimeByChar: 40, // it's not a barcode if a character takes longer than 40ms
                onComplete: function (barcode, qty) {
                    //alert(barcode);
                    var tab_selected = window.location.hash;
                    if (tab_selected === "#pills-release-item-request") {
                        if ($('#modal-cart-for-released').hasClass('show') && $('#hiddenIsDiscardItemClicked').val()==="") {
                            var uri = "/api/Common/GetItem/strcode/" + barcode;
                            var datas = [];
                            var strs = [];

                            $('#table-for-release-cart-items > tr').each(function () {

                                var item_N = $(this).children().first().text().trim();
                                var item_Id = $(this).children().first().attr('id');
                                var idCheck = item_Id + "checkb";
                                var item_Scanned = $('#' + idCheck).attr('checked');
                                var is_Scanned = "";
                                if (item_Scanned) {
                                    is_Scanned = "Yes";
                                } else { is_Scanned = "No"; }
                                var d = {
                                    'itemname': item_N,
                                    'itemid': item_Id,
                                    'idcheck': idCheck,
                                    'itemscanned': is_Scanned
                                }
                                datas.push(d);
                            });
                            $('.strs').each(function () {
                                strs.push($(this).val());
                            });
                            $.getJSON(uri).done(function (data) {
                                if (data) {
                                    //SuccessMessage(JSON.stringify(data.Status));
                                    if (data.Status == "Available") {
                                        $('#Scan-item-to-release').val("");

                                        var ItemName = data.Item_Name;
                                        var Id = data.Id;
                                        var Str = data.Str_Code;
                                        var Remarks = data.Remarks;
                                        var Con = data.Condition;
                                        var hasMatch = false;
                                        var message = "";
                                        for (var i = 0; i < datas.length; i++) {
                                            if (datas[i].itemname === ItemName) {
                                                if (datas[i].itemscanned === "No") {
                                                    if (strs.indexOf(Str) < 0) {
                                                        $('#' + datas[i].idcheck).attr('checked', true);
                                                        $('#' + datas[i].itemid + 'strcode').val(Str);
                                                        $('#' + datas[i].itemid + 'remarks').val(Remarks);
                                                        $('#' + datas[i].itemid + 'condition').val(Con);
                                                        hasMatch = true;
                                                        break;
                                                    } else {
                                                        message = "Item is already Scanned!";
                                                    }
                                                }
                                            }
                                        }
                                        if (message === "") {
                                            if (!hasMatch) {
                                                ErrorMessage("Scanned item not matched with the requested items.");
                                            }
                                        } else {
                                            ErrorMessage(message);
                                        }

                                    } else {
                                        ErrorMessage("Item is not available anymore.!");
                                        $('#Scan-item-to-release').val("");
                                    }

                                } else {
                                    ErrorMessage("Barcode not found");
                                    $('#Scan-item-to-release').val("");
                                }

                            })

                        }
                    }
                }
            });





            $('#confirmReturned1').click(function () {
                if ($(this).prop("checked") === true) {
                    $('#SelectCondition').toggle();
                    $('#ButClose').toggle();
                    $('#Remarks').toggle();
                    //ButClose Remarks
                }
            })
            $('#ButClose').click(function () {
                Swal.fire({
                    type: 'success',
                    html: 'Successfully Closed.',
                    confirmButtonClass: 'btn btn-success',
                    buttonsStyling: false,
                    timer: 2000
                });
            })
            $('#confirmReleased1').click(function () {
                if ($(this).prop("checked") === true) {

                    // $('#RemarksReleased').("enable");
                    //ButClose Remarks
                }
            })
            $('#Released').click(function () {
                if ($('#confirmReleased1').prop("checked") === true) {

                    Swal.fire({
                        type: 'success',
                        html: 'Successful',
                        confirmButtonClass: 'btn btn-success',
                        buttonsStyling: false,
                        timer: 2000
                    });
                } else {
                    Swal.fire({
                        type: 'error',
                        html: 'Failed! Scan item first..',
                        confirmButtonClass: 'btn btn-danger',
                        buttonsStyling: false,
                        timer: 2000
                    });
                }
            })
            $('#TapRFIDInputRelease').keyup(function () {
                $('#ReleasePaneRow1').toggle();
                $('#ReleasePaneRow2').toggle();
                $('#RunningRelease').toggle();

            })
            $('#TapRFIDInputReturn').keyup(function () {
                $('#ReturnPaneRow1').toggle();
                $('#ReturnPaneRow2').toggle();
                $('#RunningReturn').toggle();

            })

            $('#ReleaseAll').click(function () {
                if ($('#confirmReleased1').prop("checked") === true && $('#confirmReleased2').prop("checked") === true && $('#confirmReleased3').prop("checked") === true) {
                    Swal.fire({
                        type: 'success',
                        html: 'Items Released',
                        confirmButtonClass: 'btn btn-success',
                        buttonsStyling: false,
                        timer: 2000
                    });
                } else {
                    Swal.fire({
                        type: 'error',
                        html: 'Failed! Need to Scan items first',
                        confirmButtonClass: 'btn btn-danger',
                        buttonsStyling: false,
                        timer: 2000
                    });
                }
            })

            $('#Discard').click(function () {
                swal.fire({
                    title: 'Are you sure to Discard this Item?',
                    text: "You won't be able to revert this!",
                    type: 'warning',
                    showCancelButton: true,
                    confirmButtonText: 'Yes, discard it!',
                    cancelButtonText: 'No!',
                    reverseButtons: false
                }).then(function (result) {
                    if (result.value) {
                        Swal.fire({
                            type: 'success',
                            html: 'Item Discard',
                            confirmButtonClass: 'btn btn-success',
                            buttonsStyling: false,
                            timer: 2000
                        });
                    }
                })
            })

            $('#DiscardAll').click(function () {
                swal.fire({
                    title: 'Are you sure to Discard All?',
                    text: "You won't be able to revert this!",
                    type: 'warning',
                    showCancelButton: true,
                    confirmButtonText: 'Yes, discard it!',
                    cancelButtonText: 'No!',
                    reverseButtons: false
                }).then(function (result) {
                    if (result.value) {
                        Swal.fire({
                            type: 'success',
                            html: 'Items Discard',
                            confirmButtonClass: 'btn btn-success',
                            buttonsStyling: false,
                            timer: 2000
                        });
                    }
                })
            })



            //=========== (START) function for show Success message ===========||
            function SuccessMessage(message) {
                notify("top", "center", "fa fa-check", "success", "animated bounceIn", "animated bounceOut", " " + message);
            }
            //=========== (END) function for show Success message ===========||

            //=========== (START) function for show Info message ===========||
            function InfoMessage(message) {
                notify("top", "center", "fa fa-info", "info", "animated bounceIn", "animated bounceOut", " " + message);
            }
            //=========== (END) function for show Info message ===========||

            //=========== (START) function for show Erorr message ===========||
            function ErrorMessage(message) {
                notify("top", "center", "fa fa-times", "danger", "animated bounceIn", "animated bounceOut", " " + message);
            }
            //=========== (END) function for show Erorr message ===========||
            //=========== (START) function to display Message ===========||
            function notify(from, align, icon, type, animIn, animOut, mess) {
                $.growl({
                    icon: icon,
                    title: '',
                    message: mess,
                    url: ''
                }, {
                    element: 'body',
                    type: type,
                    allow_dismiss: true,
                    placement: {
                        from: from,
                        align: align
                    },
                    offset: { x: 30, y: 30 },
                    spacing: 10,
                    z_index: 999999,
                    delay: 2500,
                    timer: 1000,
                    url_target: '_blank',
                    mouse_over: false,
                    animate: {
                        enter: animIn,
                        exit: animOut
                    },
                    icon_type: 'class',
                    template: '<div data-growl="container" class="alert" role="alert">' +
                        '<button type="button" class="close" data-growl="dismiss">' +
                        '<span aria-hidden="true">&times;</span>' +
                        '<span class="sr-only">Close</span>' +
                        '</button>' +
                        '<span data-growl="icon"></span>' +
                        '<span data-growl="title"></span>' +
                        '<span data-growl="message"></span>' +
                        '<a href="#!" data-growl="url"></a>' +
                        '</div>'
                });
            };
                    //=========== (END) function to display Message ===========||

        </script>
    }
}




